name: CI

on:
  workflow_dispatch:
    inputs:
      cmake_version:
        description: "CMake Version:"
        default: "4.0.2"
        required: true
      ninja_version:
        description: "Ninja Version:"
        default: "1.12.1"
        required: true

permissions:
  contents: write
  actions: write

jobs:
  build-linux:
    runs-on: ubuntu-24.04
    strategy:
      fail-fast: false
      matrix:
        include:
          - target_triple: aarch64-linux-musl
            target_arch: aarch64
          - target_triple: aarch64_be-linux-musl
            target_arch: aarch64_be
          - target_triple: arm-linux-musleabi
            target_arch: armel
          - target_triple: arm-linux-musleabihf
            target_arch: armhf
          - target_triple: armeb-linux-musleabi
            target_arch: armel
          - target_triple: armeb-linux-musleabihf
            target_arch: armhf
          - target_triple: loongarch64-linux-musl
            target_arch: loongarch64
          - target_triple: mips-linux-musleabi
            target_arch: mips
          - target_triple: mips-linux-musleabihf
            target_arch: mips
          - target_triple: mipsel-linux-musleabi
            target_arch: mipsel
          - target_triple: mipsel-linux-musleabihf
            target_arch: mipsel
          - target_triple: mips64-linux-muslabin32
            target_arch: mips64
          - target_triple: mips64el-linux-muslabin32
            target_arch: mips64el
          - target_triple: powerpc-linux-musleabi
            target_arch: powerpc
          - target_triple: powerpc-linux-musleabihf
            target_arch: powerpc
          - target_triple: powerpc64-linux-musl
            target_arch: powerpc64
          - target_triple: powerpc64le-linux-musl
            target_arch: powerpc64le
          - target_triple: riscv32-linux-musl
            target_arch: riscv32
          - target_triple: riscv64-linux-musl
            target_arch: riscv64
          - target_triple: s390x-linux-musl
            target_arch: s390x
          - target_triple: x86-linux-musl
            target_arch: x86
          - target_triple: x86_64-linux-musl
            target_arch: x86_64
          - target_triple: x86_64-linux-muslx32
            target_arch: x86_64
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          path: ${{github.workspace}}
      - name: Setup Zig
        uses: mlugg/setup-zig@v2
        with:
          version: "0.14.1"
          use-cache: false
      - name: Setup Zig toolchain
        run: | 
          git clone https://github.com/${{ github.repository_owner }}/zig-as-llvm
          cp -R ${{github.workspace}}/patches/zig/* $(whereis zig | awk '{print $2}' | xargs dirname)
      - name: Check and Build
        id: build-check
        run: |
          if curl --head --fail --silent "https://github.com/${{ github.repository_owner }}/cmake-custom/releases/download/${{ inputs.cmake_version }}/cmake-${{ matrix.target_triple }}.tar.xz"; then
            echo "Artifact already exists, skipping build."
            echo "build_skipped=true" >> $GITHUB_OUTPUT
          else
            echo "Artifact does not exist, running build..."
            echo "build_skipped=false" >> $GITHUB_OUTPUT
            ./build-openssl.sh ${{ matrix.target_triple }}
            sudo rm /usr/bin/f95 /usr/local/bin/swiftc
            ./build.sh ${{ inputs.cmake_version }} ${{ inputs.ninja_version }} ${{ matrix.target_triple }} ${{ matrix.target_arch }} Linux
          fi
      - name: Compress
        if: steps.build-check.outputs.build_skipped == 'false'
        run: |
          tarball_name=cmake-${{ matrix.target_triple }}
          echo tarball_name=${tarball_name} >> ${GITHUB_ENV}
          mv install/${{ inputs.cmake_version }}-${{ matrix.target_triple }} ${{ inputs.cmake_version }}
          tar -cf - ${{ inputs.cmake_version }} | xz -T0 -9e --lzma2=dict=256MiB > ${tarball_name}.tar.xz
      - name: Upload
        if: steps.build-check.outputs.build_skipped == 'false'
        uses: ncipollo/release-action@v1.16.0
        with:
          tag: "${{ inputs.cmake_version }}"
          artifacts: ${{env.tarball_name}}.tar.xz
          allowUpdates: true
          replacesArtifacts: true
          body: ''
